
cmake_minimum_required(VERSION 3.10)
project(VirtualTouchCpp)

# C++17 표준 사용
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# 필요한 패키지 찾기
find_package(OpenCV REQUIRED)
find_package(PkgConfig REQUIRED)

# FFmpeg 라이브러리 찾기
pkg_search_module(FFMPEG REQUIRED libavformat libavcodec libavutil libswscale libavdevice)

# libxdo 라이브러리 찾기
#pkg_search_module(XDO REQUIRED libxdo)
# libxdo-dev 패키지에 .pc 파일이 없으므로 직접 라이브러리를 찾습니다.
find_path(XDO_INCLUDE_DIRS NAMES xdo.h)
find_library(XDO_LIBRARIES NAMES xdo)

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(XDO DEFAULT_MSG XDO_LIBRARIES XDO_INCLUDE_DIRS)

if(XDO_FOUND)
  message(STATUS "Found libxdo headers in: ${XDO_INCLUDE_DIRS}")
  message(STATUS "Found libxdo library in: ${XDO_LIBRARIES}")
  # 최신 CMake 방식과 호환성을 위해 IMPORTED 타겟 생성
  add_library(XDO::xdo UNKNOWN IMPORTED)
  set_target_properties(XDO::xdo PROPERTIES
    IMPORTED_LOCATION "${XDO_LIBRARIES}"
    INTERFACE_INCLUDE_DIRECTORIES "${XDO_INCLUDE_DIRS}")
endif()

# MediaPipe 라이브러리 경로 설정 (사용자 환경에 맞게 수정 필요)
# 예: /usr/local/lib 또는 직접 빌드한 경로
link_directories(/home/seo/virtual_touch/mediapipe/bazel-bin/mediapipe/framework) # MediaPipe 라이브러리 경로

# 실행 파일 생성
add_executable(virtual_touch main.cpp)

# 라이브러리 링크
target_link_libraries(virtual_touch
    PRIVATE
    ${OpenCV_LIBS}
    ${FFMPEG_LIBRARIES}
    ${XDO_LIBRARIES}
    -lmediapipe_framework # MediaPipe 라이브러리
    -lprotobuf            # MediaPipe 의존성
    -lpthread -lGL        # 기타 필요한 라이브러리
    # --- 아래 Abseil 라이브러리들을 추가합니다 ---
    -labsl_base
    -labsl_memory
    -labsl_synchronization
    -labsl_strings
    -labsl_status
    -labsl_statusor
)

# 헤더 파일 경로 포함
target_include_directories(virtual_touch
    PRIVATE
    ${OpenCV_INCLUDE_DIRS}
    ${FFMPEG_INCLUDE_DIRS}
    ${XDO_INCLUDE_DIRS}
    /home/seo/virtual_touch/mediapipe # MediaPipe 헤더 경로
    /home/seo/tools/anaconda3/envs/vtouch/include # Protobuf 헤더 경로 (MediaPipe가 사용)
    /usr/include  
)
