// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/mediapipe/framework/formats/landmark.proto
// Protobuf C++ Version: 5.29.3

#include "mediapipe/mediapipe/framework/formats/landmark.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mediapipe {

inline constexpr NormalizedLandmark::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        visibility_{0},
        presence_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NormalizedLandmark::NormalizedLandmark(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NormalizedLandmarkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NormalizedLandmarkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NormalizedLandmarkDefaultTypeInternal() {}
  union {
    NormalizedLandmark _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NormalizedLandmarkDefaultTypeInternal _NormalizedLandmark_default_instance_;

inline constexpr Landmark::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        x_{0},
        y_{0},
        z_{0},
        visibility_{0},
        presence_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Landmark::Landmark(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LandmarkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandmarkDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandmarkDefaultTypeInternal() {}
  union {
    Landmark _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandmarkDefaultTypeInternal _Landmark_default_instance_;

inline constexpr NormalizedLandmarkList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : landmark_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NormalizedLandmarkList::NormalizedLandmarkList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NormalizedLandmarkListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NormalizedLandmarkListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NormalizedLandmarkListDefaultTypeInternal() {}
  union {
    NormalizedLandmarkList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NormalizedLandmarkListDefaultTypeInternal _NormalizedLandmarkList_default_instance_;

inline constexpr LandmarkList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : landmark_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LandmarkList::LandmarkList(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LandmarkListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandmarkListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandmarkListDefaultTypeInternal() {}
  union {
    LandmarkList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandmarkListDefaultTypeInternal _LandmarkList_default_instance_;

inline constexpr NormalizedLandmarkListCollection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : landmark_list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NormalizedLandmarkListCollection::NormalizedLandmarkListCollection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NormalizedLandmarkListCollectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NormalizedLandmarkListCollectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NormalizedLandmarkListCollectionDefaultTypeInternal() {}
  union {
    NormalizedLandmarkListCollection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NormalizedLandmarkListCollectionDefaultTypeInternal _NormalizedLandmarkListCollection_default_instance_;

inline constexpr LandmarkListCollection::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : landmark_list_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LandmarkListCollection::LandmarkListCollection(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LandmarkListCollectionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LandmarkListCollectionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LandmarkListCollectionDefaultTypeInternal() {}
  union {
    LandmarkListCollection _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LandmarkListCollectionDefaultTypeInternal _LandmarkListCollection_default_instance_;
}  // namespace mediapipe
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto = nullptr;
const ::uint32_t
    TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_.visibility_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::Landmark, _impl_.presence_),
        0,
        1,
        2,
        3,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::LandmarkList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::LandmarkList, _impl_.landmark_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::LandmarkListCollection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::LandmarkListCollection, _impl_.landmark_list_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_.visibility_),
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmark, _impl_.presence_),
        0,
        1,
        2,
        3,
        4,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmarkList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmarkList, _impl_.landmark_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmarkListCollection, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mediapipe::NormalizedLandmarkListCollection, _impl_.landmark_list_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::mediapipe::Landmark)},
        {18, -1, -1, sizeof(::mediapipe::LandmarkList)},
        {27, -1, -1, sizeof(::mediapipe::LandmarkListCollection)},
        {36, 49, -1, sizeof(::mediapipe::NormalizedLandmark)},
        {54, -1, -1, sizeof(::mediapipe::NormalizedLandmarkList)},
        {63, -1, -1, sizeof(::mediapipe::NormalizedLandmarkListCollection)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::mediapipe::_Landmark_default_instance_._instance,
    &::mediapipe::_LandmarkList_default_instance_._instance,
    &::mediapipe::_LandmarkListCollection_default_instance_._instance,
    &::mediapipe::_NormalizedLandmark_default_instance_._instance,
    &::mediapipe::_NormalizedLandmarkList_default_instance_._instance,
    &::mediapipe::_NormalizedLandmarkListCollection_default_instance_._instance,
};
const char descriptor_table_protodef_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n4mediapipe/mediapipe/framework/formats/"
    "landmark.proto\022\tmediapipe\"Q\n\010Landmark\022\t\n"
    "\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\022\n\nvisibi"
    "lity\030\004 \001(\002\022\020\n\010presence\030\005 \001(\002\"5\n\014Landmark"
    "List\022%\n\010landmark\030\001 \003(\0132\023.mediapipe.Landm"
    "ark\"H\n\026LandmarkListCollection\022.\n\rlandmar"
    "k_list\030\001 \003(\0132\027.mediapipe.LandmarkList\"[\n"
    "\022NormalizedLandmark\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001("
    "\002\022\t\n\001z\030\003 \001(\002\022\022\n\nvisibility\030\004 \001(\002\022\020\n\010pres"
    "ence\030\005 \001(\002\"I\n\026NormalizedLandmarkList\022/\n\010"
    "landmark\030\001 \003(\0132\035.mediapipe.NormalizedLan"
    "dmark\"\\\n NormalizedLandmarkListCollectio"
    "n\0228\n\rlandmark_list\030\001 \003(\0132!.mediapipe.Nor"
    "malizedLandmarkListB3\n\"com.google.mediap"
    "ipe.formats.protoB\rLandmarkProto"
};
static ::absl::once_flag descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto = {
    false,
    false,
    592,
    descriptor_table_protodef_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    "mediapipe/mediapipe/framework/formats/landmark.proto",
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto::offsets,
    file_level_enum_descriptors_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    file_level_service_descriptors_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
};
namespace mediapipe {
// ===================================================================

class Landmark::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Landmark>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Landmark, _impl_._has_bits_);
};

Landmark::Landmark(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.Landmark)
}
Landmark::Landmark(
    ::google::protobuf::Arena* arena, const Landmark& from)
    : Landmark(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Landmark::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Landmark::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, presence_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::presence_));
}
Landmark::~Landmark() {
  // @@protoc_insertion_point(destructor:mediapipe.Landmark)
  SharedDtor(*this);
}
inline void Landmark::SharedDtor(MessageLite& self) {
  Landmark& this_ = static_cast<Landmark&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Landmark::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Landmark(arena);
}
constexpr auto Landmark::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Landmark),
                                            alignof(Landmark));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Landmark::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Landmark_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Landmark::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Landmark>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Landmark::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Landmark>(), &Landmark::ByteSizeLong,
            &Landmark::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Landmark, _impl_._cached_size_),
        false,
    },
    &Landmark::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Landmark::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> Landmark::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Landmark, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::Landmark>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(Landmark, _impl_.x_)}},
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(Landmark, _impl_.y_)}},
    // optional float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(Landmark, _impl_.z_)}},
    // optional float visibility = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(Landmark, _impl_.visibility_)}},
    // optional float presence = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(Landmark, _impl_.presence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(Landmark, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(Landmark, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 3;
    {PROTOBUF_FIELD_OFFSET(Landmark, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float visibility = 4;
    {PROTOBUF_FIELD_OFFSET(Landmark, _impl_.visibility_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float presence = 5;
    {PROTOBUF_FIELD_OFFSET(Landmark, _impl_.presence_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Landmark::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.Landmark)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.presence_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.presence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Landmark::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Landmark& this_ = static_cast<const Landmark&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Landmark::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Landmark& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.Landmark)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional float x = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // optional float y = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // optional float z = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          // optional float visibility = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_visibility(), target);
          }

          // optional float presence = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_presence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.Landmark)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Landmark::ByteSizeLong(const MessageLite& base) {
          const Landmark& this_ = static_cast<const Landmark&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Landmark::ByteSizeLong() const {
          const Landmark& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.Landmark)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional float x = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // optional float y = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // optional float z = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float visibility = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float presence = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Landmark::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Landmark*>(&to_msg);
  auto& from = static_cast<const Landmark&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.Landmark)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.visibility_ = from._impl_.visibility_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.presence_ = from._impl_.presence_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Landmark::CopyFrom(const Landmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.Landmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Landmark::InternalSwap(Landmark* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Landmark, _impl_.presence_)
      + sizeof(Landmark::_impl_.presence_)
      - PROTOBUF_FIELD_OFFSET(Landmark, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Landmark::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LandmarkList::_Internal {
 public:
};

LandmarkList::LandmarkList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.LandmarkList)
}
inline PROTOBUF_NDEBUG_INLINE LandmarkList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::LandmarkList& from_msg)
      : landmark_{visibility, arena, from.landmark_},
        _cached_size_{0} {}

LandmarkList::LandmarkList(
    ::google::protobuf::Arena* arena,
    const LandmarkList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LandmarkList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mediapipe.LandmarkList)
}
inline PROTOBUF_NDEBUG_INLINE LandmarkList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : landmark_{visibility, arena},
        _cached_size_{0} {}

inline void LandmarkList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LandmarkList::~LandmarkList() {
  // @@protoc_insertion_point(destructor:mediapipe.LandmarkList)
  SharedDtor(*this);
}
inline void LandmarkList::SharedDtor(MessageLite& self) {
  LandmarkList& this_ = static_cast<LandmarkList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LandmarkList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LandmarkList(arena);
}
constexpr auto LandmarkList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LandmarkList, _impl_.landmark_) +
          decltype(LandmarkList::_impl_.landmark_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LandmarkList), alignof(LandmarkList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LandmarkList::PlacementNew_,
                                 sizeof(LandmarkList),
                                 alignof(LandmarkList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LandmarkList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LandmarkList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LandmarkList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LandmarkList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LandmarkList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LandmarkList>(), &LandmarkList::ByteSizeLong,
            &LandmarkList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LandmarkList, _impl_._cached_size_),
        false,
    },
    &LandmarkList::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LandmarkList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LandmarkList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::LandmarkList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mediapipe.Landmark landmark = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LandmarkList, _impl_.landmark_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mediapipe.Landmark landmark = 1;
    {PROTOBUF_FIELD_OFFSET(LandmarkList, _impl_.landmark_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::Landmark>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LandmarkList::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.LandmarkList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.landmark_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LandmarkList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LandmarkList& this_ = static_cast<const LandmarkList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LandmarkList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LandmarkList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.LandmarkList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.Landmark landmark = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_landmark_size());
               i < n; i++) {
            const auto& repfield = this_._internal_landmark().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.LandmarkList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LandmarkList::ByteSizeLong(const MessageLite& base) {
          const LandmarkList& this_ = static_cast<const LandmarkList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LandmarkList::ByteSizeLong() const {
          const LandmarkList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.LandmarkList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.Landmark landmark = 1;
            {
              total_size += 1UL * this_._internal_landmark_size();
              for (const auto& msg : this_._internal_landmark()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LandmarkList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LandmarkList*>(&to_msg);
  auto& from = static_cast<const LandmarkList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.LandmarkList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_landmark()->MergeFrom(
      from._internal_landmark());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LandmarkList::CopyFrom(const LandmarkList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.LandmarkList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LandmarkList::InternalSwap(LandmarkList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.landmark_.InternalSwap(&other->_impl_.landmark_);
}

::google::protobuf::Metadata LandmarkList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LandmarkListCollection::_Internal {
 public:
};

LandmarkListCollection::LandmarkListCollection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.LandmarkListCollection)
}
inline PROTOBUF_NDEBUG_INLINE LandmarkListCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::LandmarkListCollection& from_msg)
      : landmark_list_{visibility, arena, from.landmark_list_},
        _cached_size_{0} {}

LandmarkListCollection::LandmarkListCollection(
    ::google::protobuf::Arena* arena,
    const LandmarkListCollection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LandmarkListCollection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mediapipe.LandmarkListCollection)
}
inline PROTOBUF_NDEBUG_INLINE LandmarkListCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : landmark_list_{visibility, arena},
        _cached_size_{0} {}

inline void LandmarkListCollection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LandmarkListCollection::~LandmarkListCollection() {
  // @@protoc_insertion_point(destructor:mediapipe.LandmarkListCollection)
  SharedDtor(*this);
}
inline void LandmarkListCollection::SharedDtor(MessageLite& self) {
  LandmarkListCollection& this_ = static_cast<LandmarkListCollection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LandmarkListCollection::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LandmarkListCollection(arena);
}
constexpr auto LandmarkListCollection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(LandmarkListCollection, _impl_.landmark_list_) +
          decltype(LandmarkListCollection::_impl_.landmark_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(LandmarkListCollection), alignof(LandmarkListCollection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&LandmarkListCollection::PlacementNew_,
                                 sizeof(LandmarkListCollection),
                                 alignof(LandmarkListCollection));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LandmarkListCollection::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LandmarkListCollection_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LandmarkListCollection::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LandmarkListCollection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LandmarkListCollection::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LandmarkListCollection>(), &LandmarkListCollection::ByteSizeLong,
            &LandmarkListCollection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LandmarkListCollection, _impl_._cached_size_),
        false,
    },
    &LandmarkListCollection::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LandmarkListCollection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> LandmarkListCollection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::LandmarkListCollection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mediapipe.LandmarkList landmark_list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LandmarkListCollection, _impl_.landmark_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mediapipe.LandmarkList landmark_list = 1;
    {PROTOBUF_FIELD_OFFSET(LandmarkListCollection, _impl_.landmark_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::LandmarkList>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void LandmarkListCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.LandmarkListCollection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.landmark_list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LandmarkListCollection::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LandmarkListCollection& this_ = static_cast<const LandmarkListCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LandmarkListCollection::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LandmarkListCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.LandmarkListCollection)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.LandmarkList landmark_list = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_landmark_list_size());
               i < n; i++) {
            const auto& repfield = this_._internal_landmark_list().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.LandmarkListCollection)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LandmarkListCollection::ByteSizeLong(const MessageLite& base) {
          const LandmarkListCollection& this_ = static_cast<const LandmarkListCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LandmarkListCollection::ByteSizeLong() const {
          const LandmarkListCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.LandmarkListCollection)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.LandmarkList landmark_list = 1;
            {
              total_size += 1UL * this_._internal_landmark_list_size();
              for (const auto& msg : this_._internal_landmark_list()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LandmarkListCollection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LandmarkListCollection*>(&to_msg);
  auto& from = static_cast<const LandmarkListCollection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.LandmarkListCollection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_landmark_list()->MergeFrom(
      from._internal_landmark_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LandmarkListCollection::CopyFrom(const LandmarkListCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.LandmarkListCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LandmarkListCollection::InternalSwap(LandmarkListCollection* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.landmark_list_.InternalSwap(&other->_impl_.landmark_list_);
}

::google::protobuf::Metadata LandmarkListCollection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NormalizedLandmark::_Internal {
 public:
  using HasBits =
      decltype(std::declval<NormalizedLandmark>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_._has_bits_);
};

NormalizedLandmark::NormalizedLandmark(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.NormalizedLandmark)
}
NormalizedLandmark::NormalizedLandmark(
    ::google::protobuf::Arena* arena, const NormalizedLandmark& from)
    : NormalizedLandmark(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE NormalizedLandmark::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void NormalizedLandmark::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, presence_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::presence_));
}
NormalizedLandmark::~NormalizedLandmark() {
  // @@protoc_insertion_point(destructor:mediapipe.NormalizedLandmark)
  SharedDtor(*this);
}
inline void NormalizedLandmark::SharedDtor(MessageLite& self) {
  NormalizedLandmark& this_ = static_cast<NormalizedLandmark&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NormalizedLandmark::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NormalizedLandmark(arena);
}
constexpr auto NormalizedLandmark::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(NormalizedLandmark),
                                            alignof(NormalizedLandmark));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NormalizedLandmark::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NormalizedLandmark_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NormalizedLandmark::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NormalizedLandmark>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NormalizedLandmark::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NormalizedLandmark>(), &NormalizedLandmark::ByteSizeLong,
            &NormalizedLandmark::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_._cached_size_),
        false,
    },
    &NormalizedLandmark::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NormalizedLandmark::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> NormalizedLandmark::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::NormalizedLandmark>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional float x = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 0, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.x_)}},
    // optional float y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.y_)}},
    // optional float z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.z_)}},
    // optional float visibility = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.visibility_)}},
    // optional float presence = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.presence_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional float x = 1;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 2;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 3;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float visibility = 4;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.visibility_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float presence = 5;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.presence_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void NormalizedLandmark::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.NormalizedLandmark)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.presence_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.presence_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NormalizedLandmark::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NormalizedLandmark& this_ = static_cast<const NormalizedLandmark&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NormalizedLandmark::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NormalizedLandmark& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.NormalizedLandmark)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional float x = 1;
          if (cached_has_bits & 0x00000001u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                1, this_._internal_x(), target);
          }

          // optional float y = 2;
          if (cached_has_bits & 0x00000002u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_y(), target);
          }

          // optional float z = 3;
          if (cached_has_bits & 0x00000004u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_z(), target);
          }

          // optional float visibility = 4;
          if (cached_has_bits & 0x00000008u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_visibility(), target);
          }

          // optional float presence = 5;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_presence(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.NormalizedLandmark)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NormalizedLandmark::ByteSizeLong(const MessageLite& base) {
          const NormalizedLandmark& this_ = static_cast<const NormalizedLandmark&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NormalizedLandmark::ByteSizeLong() const {
          const NormalizedLandmark& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.NormalizedLandmark)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000001fu) {
            // optional float x = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 5;
            }
            // optional float y = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 5;
            }
            // optional float z = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 5;
            }
            // optional float visibility = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 5;
            }
            // optional float presence = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NormalizedLandmark::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NormalizedLandmark*>(&to_msg);
  auto& from = static_cast<const NormalizedLandmark&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.NormalizedLandmark)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.visibility_ = from._impl_.visibility_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.presence_ = from._impl_.presence_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NormalizedLandmark::CopyFrom(const NormalizedLandmark& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.NormalizedLandmark)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NormalizedLandmark::InternalSwap(NormalizedLandmark* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.presence_)
      + sizeof(NormalizedLandmark::_impl_.presence_)
      - PROTOBUF_FIELD_OFFSET(NormalizedLandmark, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata NormalizedLandmark::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NormalizedLandmarkList::_Internal {
 public:
};

NormalizedLandmarkList::NormalizedLandmarkList(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.NormalizedLandmarkList)
}
inline PROTOBUF_NDEBUG_INLINE NormalizedLandmarkList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::NormalizedLandmarkList& from_msg)
      : landmark_{visibility, arena, from.landmark_},
        _cached_size_{0} {}

NormalizedLandmarkList::NormalizedLandmarkList(
    ::google::protobuf::Arena* arena,
    const NormalizedLandmarkList& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NormalizedLandmarkList* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mediapipe.NormalizedLandmarkList)
}
inline PROTOBUF_NDEBUG_INLINE NormalizedLandmarkList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : landmark_{visibility, arena},
        _cached_size_{0} {}

inline void NormalizedLandmarkList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NormalizedLandmarkList::~NormalizedLandmarkList() {
  // @@protoc_insertion_point(destructor:mediapipe.NormalizedLandmarkList)
  SharedDtor(*this);
}
inline void NormalizedLandmarkList::SharedDtor(MessageLite& self) {
  NormalizedLandmarkList& this_ = static_cast<NormalizedLandmarkList&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NormalizedLandmarkList::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NormalizedLandmarkList(arena);
}
constexpr auto NormalizedLandmarkList::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NormalizedLandmarkList, _impl_.landmark_) +
          decltype(NormalizedLandmarkList::_impl_.landmark_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NormalizedLandmarkList), alignof(NormalizedLandmarkList), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NormalizedLandmarkList::PlacementNew_,
                                 sizeof(NormalizedLandmarkList),
                                 alignof(NormalizedLandmarkList));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NormalizedLandmarkList::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NormalizedLandmarkList_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NormalizedLandmarkList::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NormalizedLandmarkList>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NormalizedLandmarkList::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NormalizedLandmarkList>(), &NormalizedLandmarkList::ByteSizeLong,
            &NormalizedLandmarkList::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NormalizedLandmarkList, _impl_._cached_size_),
        false,
    },
    &NormalizedLandmarkList::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NormalizedLandmarkList::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NormalizedLandmarkList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::NormalizedLandmarkList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mediapipe.NormalizedLandmark landmark = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmarkList, _impl_.landmark_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mediapipe.NormalizedLandmark landmark = 1;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmarkList, _impl_.landmark_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::NormalizedLandmark>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NormalizedLandmarkList::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.NormalizedLandmarkList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.landmark_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NormalizedLandmarkList::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NormalizedLandmarkList& this_ = static_cast<const NormalizedLandmarkList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NormalizedLandmarkList::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NormalizedLandmarkList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.NormalizedLandmarkList)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.NormalizedLandmark landmark = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_landmark_size());
               i < n; i++) {
            const auto& repfield = this_._internal_landmark().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.NormalizedLandmarkList)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NormalizedLandmarkList::ByteSizeLong(const MessageLite& base) {
          const NormalizedLandmarkList& this_ = static_cast<const NormalizedLandmarkList&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NormalizedLandmarkList::ByteSizeLong() const {
          const NormalizedLandmarkList& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.NormalizedLandmarkList)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.NormalizedLandmark landmark = 1;
            {
              total_size += 1UL * this_._internal_landmark_size();
              for (const auto& msg : this_._internal_landmark()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NormalizedLandmarkList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NormalizedLandmarkList*>(&to_msg);
  auto& from = static_cast<const NormalizedLandmarkList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.NormalizedLandmarkList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_landmark()->MergeFrom(
      from._internal_landmark());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NormalizedLandmarkList::CopyFrom(const NormalizedLandmarkList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.NormalizedLandmarkList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NormalizedLandmarkList::InternalSwap(NormalizedLandmarkList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.landmark_.InternalSwap(&other->_impl_.landmark_);
}

::google::protobuf::Metadata NormalizedLandmarkList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NormalizedLandmarkListCollection::_Internal {
 public:
};

NormalizedLandmarkListCollection::NormalizedLandmarkListCollection(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.NormalizedLandmarkListCollection)
}
inline PROTOBUF_NDEBUG_INLINE NormalizedLandmarkListCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::mediapipe::NormalizedLandmarkListCollection& from_msg)
      : landmark_list_{visibility, arena, from.landmark_list_},
        _cached_size_{0} {}

NormalizedLandmarkListCollection::NormalizedLandmarkListCollection(
    ::google::protobuf::Arena* arena,
    const NormalizedLandmarkListCollection& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NormalizedLandmarkListCollection* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:mediapipe.NormalizedLandmarkListCollection)
}
inline PROTOBUF_NDEBUG_INLINE NormalizedLandmarkListCollection::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : landmark_list_{visibility, arena},
        _cached_size_{0} {}

inline void NormalizedLandmarkListCollection::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NormalizedLandmarkListCollection::~NormalizedLandmarkListCollection() {
  // @@protoc_insertion_point(destructor:mediapipe.NormalizedLandmarkListCollection)
  SharedDtor(*this);
}
inline void NormalizedLandmarkListCollection::SharedDtor(MessageLite& self) {
  NormalizedLandmarkListCollection& this_ = static_cast<NormalizedLandmarkListCollection&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* NormalizedLandmarkListCollection::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) NormalizedLandmarkListCollection(arena);
}
constexpr auto NormalizedLandmarkListCollection::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(NormalizedLandmarkListCollection, _impl_.landmark_list_) +
          decltype(NormalizedLandmarkListCollection::_impl_.landmark_list_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(NormalizedLandmarkListCollection), alignof(NormalizedLandmarkListCollection), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&NormalizedLandmarkListCollection::PlacementNew_,
                                 sizeof(NormalizedLandmarkListCollection),
                                 alignof(NormalizedLandmarkListCollection));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull NormalizedLandmarkListCollection::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_NormalizedLandmarkListCollection_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &NormalizedLandmarkListCollection::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<NormalizedLandmarkListCollection>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &NormalizedLandmarkListCollection::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<NormalizedLandmarkListCollection>(), &NormalizedLandmarkListCollection::ByteSizeLong,
            &NormalizedLandmarkListCollection::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(NormalizedLandmarkListCollection, _impl_._cached_size_),
        false,
    },
    &NormalizedLandmarkListCollection::kDescriptorMethods,
    &descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* NormalizedLandmarkListCollection::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NormalizedLandmarkListCollection::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mediapipe::NormalizedLandmarkListCollection>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NormalizedLandmarkListCollection, _impl_.landmark_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
    {PROTOBUF_FIELD_OFFSET(NormalizedLandmarkListCollection, _impl_.landmark_list_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mediapipe::NormalizedLandmarkList>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void NormalizedLandmarkListCollection::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.NormalizedLandmarkListCollection)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.landmark_list_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* NormalizedLandmarkListCollection::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const NormalizedLandmarkListCollection& this_ = static_cast<const NormalizedLandmarkListCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* NormalizedLandmarkListCollection::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const NormalizedLandmarkListCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:mediapipe.NormalizedLandmarkListCollection)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_landmark_list_size());
               i < n; i++) {
            const auto& repfield = this_._internal_landmark_list().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:mediapipe.NormalizedLandmarkListCollection)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t NormalizedLandmarkListCollection::ByteSizeLong(const MessageLite& base) {
          const NormalizedLandmarkListCollection& this_ = static_cast<const NormalizedLandmarkListCollection&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t NormalizedLandmarkListCollection::ByteSizeLong() const {
          const NormalizedLandmarkListCollection& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:mediapipe.NormalizedLandmarkListCollection)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
            {
              total_size += 1UL * this_._internal_landmark_list_size();
              for (const auto& msg : this_._internal_landmark_list()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void NormalizedLandmarkListCollection::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NormalizedLandmarkListCollection*>(&to_msg);
  auto& from = static_cast<const NormalizedLandmarkListCollection&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.NormalizedLandmarkListCollection)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_landmark_list()->MergeFrom(
      from._internal_landmark_list());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NormalizedLandmarkListCollection::CopyFrom(const NormalizedLandmarkListCollection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.NormalizedLandmarkListCollection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NormalizedLandmarkListCollection::InternalSwap(NormalizedLandmarkListCollection* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.landmark_list_.InternalSwap(&other->_impl_.landmark_list_);
}

::google::protobuf::Metadata NormalizedLandmarkListCollection::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
