// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: mediapipe/mediapipe/framework/formats/landmark.proto
// Protobuf C++ Version: 5.29.3

#ifndef mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto_2epb_2eh
#define mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
namespace mediapipe {
class Landmark;
struct LandmarkDefaultTypeInternal;
extern LandmarkDefaultTypeInternal _Landmark_default_instance_;
class LandmarkList;
struct LandmarkListDefaultTypeInternal;
extern LandmarkListDefaultTypeInternal _LandmarkList_default_instance_;
class LandmarkListCollection;
struct LandmarkListCollectionDefaultTypeInternal;
extern LandmarkListCollectionDefaultTypeInternal _LandmarkListCollection_default_instance_;
class NormalizedLandmark;
struct NormalizedLandmarkDefaultTypeInternal;
extern NormalizedLandmarkDefaultTypeInternal _NormalizedLandmark_default_instance_;
class NormalizedLandmarkList;
struct NormalizedLandmarkListDefaultTypeInternal;
extern NormalizedLandmarkListDefaultTypeInternal _NormalizedLandmarkList_default_instance_;
class NormalizedLandmarkListCollection;
struct NormalizedLandmarkListCollectionDefaultTypeInternal;
extern NormalizedLandmarkListCollectionDefaultTypeInternal _NormalizedLandmarkListCollection_default_instance_;
}  // namespace mediapipe
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace mediapipe {

// ===================================================================


// -------------------------------------------------------------------

class NormalizedLandmark final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.NormalizedLandmark) */ {
 public:
  inline NormalizedLandmark() : NormalizedLandmark(nullptr) {}
  ~NormalizedLandmark() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NormalizedLandmark* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NormalizedLandmark));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NormalizedLandmark(
      ::google::protobuf::internal::ConstantInitialized);

  inline NormalizedLandmark(const NormalizedLandmark& from) : NormalizedLandmark(nullptr, from) {}
  inline NormalizedLandmark(NormalizedLandmark&& from) noexcept
      : NormalizedLandmark(nullptr, std::move(from)) {}
  inline NormalizedLandmark& operator=(const NormalizedLandmark& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizedLandmark& operator=(NormalizedLandmark&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NormalizedLandmark& default_instance() {
    return *internal_default_instance();
  }
  static inline const NormalizedLandmark* internal_default_instance() {
    return reinterpret_cast<const NormalizedLandmark*>(
        &_NormalizedLandmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NormalizedLandmark& a, NormalizedLandmark& b) { a.Swap(&b); }
  inline void Swap(NormalizedLandmark* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NormalizedLandmark* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NormalizedLandmark* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NormalizedLandmark>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NormalizedLandmark& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NormalizedLandmark& from) { NormalizedLandmark::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NormalizedLandmark* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.NormalizedLandmark"; }

 protected:
  explicit NormalizedLandmark(::google::protobuf::Arena* arena);
  NormalizedLandmark(::google::protobuf::Arena* arena, const NormalizedLandmark& from);
  NormalizedLandmark(::google::protobuf::Arena* arena, NormalizedLandmark&& from) noexcept
      : NormalizedLandmark(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kVisibilityFieldNumber = 4,
    kPresenceFieldNumber = 5,
  };
  // optional float x = 1;
  bool has_x() const;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // optional float y = 2;
  bool has_y() const;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // optional float z = 3;
  bool has_z() const;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // optional float visibility = 4;
  bool has_visibility() const;
  void clear_visibility() ;
  float visibility() const;
  void set_visibility(float value);

  private:
  float _internal_visibility() const;
  void _internal_set_visibility(float value);

  public:
  // optional float presence = 5;
  bool has_presence() const;
  void clear_presence() ;
  float presence() const;
  void set_presence(float value);

  private:
  float _internal_presence() const;
  void _internal_set_presence(float value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.NormalizedLandmark)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NormalizedLandmark& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
    float visibility_;
    float presence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};
// -------------------------------------------------------------------

class Landmark final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.Landmark) */ {
 public:
  inline Landmark() : Landmark(nullptr) {}
  ~Landmark() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Landmark* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Landmark));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Landmark(
      ::google::protobuf::internal::ConstantInitialized);

  inline Landmark(const Landmark& from) : Landmark(nullptr, from) {}
  inline Landmark(Landmark&& from) noexcept
      : Landmark(nullptr, std::move(from)) {}
  inline Landmark& operator=(const Landmark& from) {
    CopyFrom(from);
    return *this;
  }
  inline Landmark& operator=(Landmark&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Landmark& default_instance() {
    return *internal_default_instance();
  }
  static inline const Landmark* internal_default_instance() {
    return reinterpret_cast<const Landmark*>(
        &_Landmark_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Landmark& a, Landmark& b) { a.Swap(&b); }
  inline void Swap(Landmark* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Landmark* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Landmark* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Landmark>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Landmark& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Landmark& from) { Landmark::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Landmark* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.Landmark"; }

 protected:
  explicit Landmark(::google::protobuf::Arena* arena);
  Landmark(::google::protobuf::Arena* arena, const Landmark& from);
  Landmark(::google::protobuf::Arena* arena, Landmark&& from) noexcept
      : Landmark(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kVisibilityFieldNumber = 4,
    kPresenceFieldNumber = 5,
  };
  // optional float x = 1;
  bool has_x() const;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // optional float y = 2;
  bool has_y() const;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // optional float z = 3;
  bool has_z() const;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // optional float visibility = 4;
  bool has_visibility() const;
  void clear_visibility() ;
  float visibility() const;
  void set_visibility(float value);

  private:
  float _internal_visibility() const;
  void _internal_set_visibility(float value);

  public:
  // optional float presence = 5;
  bool has_presence() const;
  void clear_presence() ;
  float presence() const;
  void set_presence(float value);

  private:
  float _internal_presence() const;
  void _internal_set_presence(float value);

  public:
  // @@protoc_insertion_point(class_scope:mediapipe.Landmark)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Landmark& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    float x_;
    float y_;
    float z_;
    float visibility_;
    float presence_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};
// -------------------------------------------------------------------

class NormalizedLandmarkList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.NormalizedLandmarkList) */ {
 public:
  inline NormalizedLandmarkList() : NormalizedLandmarkList(nullptr) {}
  ~NormalizedLandmarkList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NormalizedLandmarkList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NormalizedLandmarkList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NormalizedLandmarkList(
      ::google::protobuf::internal::ConstantInitialized);

  inline NormalizedLandmarkList(const NormalizedLandmarkList& from) : NormalizedLandmarkList(nullptr, from) {}
  inline NormalizedLandmarkList(NormalizedLandmarkList&& from) noexcept
      : NormalizedLandmarkList(nullptr, std::move(from)) {}
  inline NormalizedLandmarkList& operator=(const NormalizedLandmarkList& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizedLandmarkList& operator=(NormalizedLandmarkList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NormalizedLandmarkList& default_instance() {
    return *internal_default_instance();
  }
  static inline const NormalizedLandmarkList* internal_default_instance() {
    return reinterpret_cast<const NormalizedLandmarkList*>(
        &_NormalizedLandmarkList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(NormalizedLandmarkList& a, NormalizedLandmarkList& b) { a.Swap(&b); }
  inline void Swap(NormalizedLandmarkList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NormalizedLandmarkList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NormalizedLandmarkList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NormalizedLandmarkList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NormalizedLandmarkList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NormalizedLandmarkList& from) { NormalizedLandmarkList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NormalizedLandmarkList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.NormalizedLandmarkList"; }

 protected:
  explicit NormalizedLandmarkList(::google::protobuf::Arena* arena);
  NormalizedLandmarkList(::google::protobuf::Arena* arena, const NormalizedLandmarkList& from);
  NormalizedLandmarkList(::google::protobuf::Arena* arena, NormalizedLandmarkList&& from) noexcept
      : NormalizedLandmarkList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLandmarkFieldNumber = 1,
  };
  // repeated .mediapipe.NormalizedLandmark landmark = 1;
  int landmark_size() const;
  private:
  int _internal_landmark_size() const;

  public:
  void clear_landmark() ;
  ::mediapipe::NormalizedLandmark* mutable_landmark(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>* mutable_landmark();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>& _internal_landmark() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>* _internal_mutable_landmark();
  public:
  const ::mediapipe::NormalizedLandmark& landmark(int index) const;
  ::mediapipe::NormalizedLandmark* add_landmark();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>& landmark() const;
  // @@protoc_insertion_point(class_scope:mediapipe.NormalizedLandmarkList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NormalizedLandmarkList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::NormalizedLandmark > landmark_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};
// -------------------------------------------------------------------

class LandmarkList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.LandmarkList) */ {
 public:
  inline LandmarkList() : LandmarkList(nullptr) {}
  ~LandmarkList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LandmarkList* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LandmarkList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LandmarkList(
      ::google::protobuf::internal::ConstantInitialized);

  inline LandmarkList(const LandmarkList& from) : LandmarkList(nullptr, from) {}
  inline LandmarkList(LandmarkList&& from) noexcept
      : LandmarkList(nullptr, std::move(from)) {}
  inline LandmarkList& operator=(const LandmarkList& from) {
    CopyFrom(from);
    return *this;
  }
  inline LandmarkList& operator=(LandmarkList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LandmarkList& default_instance() {
    return *internal_default_instance();
  }
  static inline const LandmarkList* internal_default_instance() {
    return reinterpret_cast<const LandmarkList*>(
        &_LandmarkList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LandmarkList& a, LandmarkList& b) { a.Swap(&b); }
  inline void Swap(LandmarkList* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LandmarkList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LandmarkList* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LandmarkList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LandmarkList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LandmarkList& from) { LandmarkList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LandmarkList* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.LandmarkList"; }

 protected:
  explicit LandmarkList(::google::protobuf::Arena* arena);
  LandmarkList(::google::protobuf::Arena* arena, const LandmarkList& from);
  LandmarkList(::google::protobuf::Arena* arena, LandmarkList&& from) noexcept
      : LandmarkList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLandmarkFieldNumber = 1,
  };
  // repeated .mediapipe.Landmark landmark = 1;
  int landmark_size() const;
  private:
  int _internal_landmark_size() const;

  public:
  void clear_landmark() ;
  ::mediapipe::Landmark* mutable_landmark(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>* mutable_landmark();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>& _internal_landmark() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>* _internal_mutable_landmark();
  public:
  const ::mediapipe::Landmark& landmark(int index) const;
  ::mediapipe::Landmark* add_landmark();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>& landmark() const;
  // @@protoc_insertion_point(class_scope:mediapipe.LandmarkList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LandmarkList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::Landmark > landmark_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};
// -------------------------------------------------------------------

class NormalizedLandmarkListCollection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.NormalizedLandmarkListCollection) */ {
 public:
  inline NormalizedLandmarkListCollection() : NormalizedLandmarkListCollection(nullptr) {}
  ~NormalizedLandmarkListCollection() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(NormalizedLandmarkListCollection* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(NormalizedLandmarkListCollection));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NormalizedLandmarkListCollection(
      ::google::protobuf::internal::ConstantInitialized);

  inline NormalizedLandmarkListCollection(const NormalizedLandmarkListCollection& from) : NormalizedLandmarkListCollection(nullptr, from) {}
  inline NormalizedLandmarkListCollection(NormalizedLandmarkListCollection&& from) noexcept
      : NormalizedLandmarkListCollection(nullptr, std::move(from)) {}
  inline NormalizedLandmarkListCollection& operator=(const NormalizedLandmarkListCollection& from) {
    CopyFrom(from);
    return *this;
  }
  inline NormalizedLandmarkListCollection& operator=(NormalizedLandmarkListCollection&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NormalizedLandmarkListCollection& default_instance() {
    return *internal_default_instance();
  }
  static inline const NormalizedLandmarkListCollection* internal_default_instance() {
    return reinterpret_cast<const NormalizedLandmarkListCollection*>(
        &_NormalizedLandmarkListCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(NormalizedLandmarkListCollection& a, NormalizedLandmarkListCollection& b) { a.Swap(&b); }
  inline void Swap(NormalizedLandmarkListCollection* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NormalizedLandmarkListCollection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NormalizedLandmarkListCollection* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<NormalizedLandmarkListCollection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NormalizedLandmarkListCollection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NormalizedLandmarkListCollection& from) { NormalizedLandmarkListCollection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(NormalizedLandmarkListCollection* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.NormalizedLandmarkListCollection"; }

 protected:
  explicit NormalizedLandmarkListCollection(::google::protobuf::Arena* arena);
  NormalizedLandmarkListCollection(::google::protobuf::Arena* arena, const NormalizedLandmarkListCollection& from);
  NormalizedLandmarkListCollection(::google::protobuf::Arena* arena, NormalizedLandmarkListCollection&& from) noexcept
      : NormalizedLandmarkListCollection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLandmarkListFieldNumber = 1,
  };
  // repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
  int landmark_list_size() const;
  private:
  int _internal_landmark_list_size() const;

  public:
  void clear_landmark_list() ;
  ::mediapipe::NormalizedLandmarkList* mutable_landmark_list(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>* mutable_landmark_list();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>& _internal_landmark_list() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>* _internal_mutable_landmark_list();
  public:
  const ::mediapipe::NormalizedLandmarkList& landmark_list(int index) const;
  ::mediapipe::NormalizedLandmarkList* add_landmark_list();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>& landmark_list() const;
  // @@protoc_insertion_point(class_scope:mediapipe.NormalizedLandmarkListCollection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NormalizedLandmarkListCollection& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::NormalizedLandmarkList > landmark_list_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};
// -------------------------------------------------------------------

class LandmarkListCollection final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:mediapipe.LandmarkListCollection) */ {
 public:
  inline LandmarkListCollection() : LandmarkListCollection(nullptr) {}
  ~LandmarkListCollection() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LandmarkListCollection* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LandmarkListCollection));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LandmarkListCollection(
      ::google::protobuf::internal::ConstantInitialized);

  inline LandmarkListCollection(const LandmarkListCollection& from) : LandmarkListCollection(nullptr, from) {}
  inline LandmarkListCollection(LandmarkListCollection&& from) noexcept
      : LandmarkListCollection(nullptr, std::move(from)) {}
  inline LandmarkListCollection& operator=(const LandmarkListCollection& from) {
    CopyFrom(from);
    return *this;
  }
  inline LandmarkListCollection& operator=(LandmarkListCollection&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LandmarkListCollection& default_instance() {
    return *internal_default_instance();
  }
  static inline const LandmarkListCollection* internal_default_instance() {
    return reinterpret_cast<const LandmarkListCollection*>(
        &_LandmarkListCollection_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(LandmarkListCollection& a, LandmarkListCollection& b) { a.Swap(&b); }
  inline void Swap(LandmarkListCollection* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LandmarkListCollection* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LandmarkListCollection* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LandmarkListCollection>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LandmarkListCollection& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LandmarkListCollection& from) { LandmarkListCollection::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LandmarkListCollection* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "mediapipe.LandmarkListCollection"; }

 protected:
  explicit LandmarkListCollection(::google::protobuf::Arena* arena);
  LandmarkListCollection(::google::protobuf::Arena* arena, const LandmarkListCollection& from);
  LandmarkListCollection(::google::protobuf::Arena* arena, LandmarkListCollection&& from) noexcept
      : LandmarkListCollection(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLandmarkListFieldNumber = 1,
  };
  // repeated .mediapipe.LandmarkList landmark_list = 1;
  int landmark_list_size() const;
  private:
  int _internal_landmark_list_size() const;

  public:
  void clear_landmark_list() ;
  ::mediapipe::LandmarkList* mutable_landmark_list(int index);
  ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>* mutable_landmark_list();

  private:
  const ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>& _internal_landmark_list() const;
  ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>* _internal_mutable_landmark_list();
  public:
  const ::mediapipe::LandmarkList& landmark_list(int index) const;
  ::mediapipe::LandmarkList* add_landmark_list();
  const ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>& landmark_list() const;
  // @@protoc_insertion_point(class_scope:mediapipe.LandmarkListCollection)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LandmarkListCollection& from_msg);
    ::google::protobuf::RepeatedPtrField< ::mediapipe::LandmarkList > landmark_list_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Landmark

// optional float x = 1;
inline bool Landmark::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Landmark::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float Landmark::x() const {
  // @@protoc_insertion_point(field_get:mediapipe.Landmark.x)
  return _internal_x();
}
inline void Landmark::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:mediapipe.Landmark.x)
}
inline float Landmark::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void Landmark::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional float y = 2;
inline bool Landmark::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Landmark::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float Landmark::y() const {
  // @@protoc_insertion_point(field_get:mediapipe.Landmark.y)
  return _internal_y();
}
inline void Landmark::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:mediapipe.Landmark.y)
}
inline float Landmark::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void Landmark::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional float z = 3;
inline bool Landmark::has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Landmark::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float Landmark::z() const {
  // @@protoc_insertion_point(field_get:mediapipe.Landmark.z)
  return _internal_z();
}
inline void Landmark::set_z(float value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:mediapipe.Landmark.z)
}
inline float Landmark::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void Landmark::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// optional float visibility = 4;
inline bool Landmark::has_visibility() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Landmark::clear_visibility() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.visibility_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float Landmark::visibility() const {
  // @@protoc_insertion_point(field_get:mediapipe.Landmark.visibility)
  return _internal_visibility();
}
inline void Landmark::set_visibility(float value) {
  _internal_set_visibility(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:mediapipe.Landmark.visibility)
}
inline float Landmark::_internal_visibility() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.visibility_;
}
inline void Landmark::_internal_set_visibility(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.visibility_ = value;
}

// optional float presence = 5;
inline bool Landmark::has_presence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Landmark::clear_presence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presence_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float Landmark::presence() const {
  // @@protoc_insertion_point(field_get:mediapipe.Landmark.presence)
  return _internal_presence();
}
inline void Landmark::set_presence(float value) {
  _internal_set_presence(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:mediapipe.Landmark.presence)
}
inline float Landmark::_internal_presence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presence_;
}
inline void Landmark::_internal_set_presence(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presence_ = value;
}

// -------------------------------------------------------------------

// LandmarkList

// repeated .mediapipe.Landmark landmark = 1;
inline int LandmarkList::_internal_landmark_size() const {
  return _internal_landmark().size();
}
inline int LandmarkList::landmark_size() const {
  return _internal_landmark_size();
}
inline void LandmarkList::clear_landmark() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.landmark_.Clear();
}
inline ::mediapipe::Landmark* LandmarkList::mutable_landmark(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.LandmarkList.landmark)
  return _internal_mutable_landmark()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>* LandmarkList::mutable_landmark()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.LandmarkList.landmark)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_landmark();
}
inline const ::mediapipe::Landmark& LandmarkList::landmark(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.LandmarkList.landmark)
  return _internal_landmark().Get(index);
}
inline ::mediapipe::Landmark* LandmarkList::add_landmark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::Landmark* _add = _internal_mutable_landmark()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.LandmarkList.landmark)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>& LandmarkList::landmark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.LandmarkList.landmark)
  return _internal_landmark();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>&
LandmarkList::_internal_landmark() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.landmark_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::Landmark>*
LandmarkList::_internal_mutable_landmark() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.landmark_;
}

// -------------------------------------------------------------------

// LandmarkListCollection

// repeated .mediapipe.LandmarkList landmark_list = 1;
inline int LandmarkListCollection::_internal_landmark_list_size() const {
  return _internal_landmark_list().size();
}
inline int LandmarkListCollection::landmark_list_size() const {
  return _internal_landmark_list_size();
}
inline void LandmarkListCollection::clear_landmark_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.landmark_list_.Clear();
}
inline ::mediapipe::LandmarkList* LandmarkListCollection::mutable_landmark_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.LandmarkListCollection.landmark_list)
  return _internal_mutable_landmark_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>* LandmarkListCollection::mutable_landmark_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.LandmarkListCollection.landmark_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_landmark_list();
}
inline const ::mediapipe::LandmarkList& LandmarkListCollection::landmark_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.LandmarkListCollection.landmark_list)
  return _internal_landmark_list().Get(index);
}
inline ::mediapipe::LandmarkList* LandmarkListCollection::add_landmark_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::LandmarkList* _add = _internal_mutable_landmark_list()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.LandmarkListCollection.landmark_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>& LandmarkListCollection::landmark_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.LandmarkListCollection.landmark_list)
  return _internal_landmark_list();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>&
LandmarkListCollection::_internal_landmark_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.landmark_list_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::LandmarkList>*
LandmarkListCollection::_internal_mutable_landmark_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.landmark_list_;
}

// -------------------------------------------------------------------

// NormalizedLandmark

// optional float x = 1;
inline bool NormalizedLandmark::has_x() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void NormalizedLandmark::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline float NormalizedLandmark::x() const {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmark.x)
  return _internal_x();
}
inline void NormalizedLandmark::set_x(float value) {
  _internal_set_x(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:mediapipe.NormalizedLandmark.x)
}
inline float NormalizedLandmark::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void NormalizedLandmark::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// optional float y = 2;
inline bool NormalizedLandmark::has_y() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void NormalizedLandmark::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float NormalizedLandmark::y() const {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmark.y)
  return _internal_y();
}
inline void NormalizedLandmark::set_y(float value) {
  _internal_set_y(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:mediapipe.NormalizedLandmark.y)
}
inline float NormalizedLandmark::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void NormalizedLandmark::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// optional float z = 3;
inline bool NormalizedLandmark::has_z() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void NormalizedLandmark::clear_z() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float NormalizedLandmark::z() const {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmark.z)
  return _internal_z();
}
inline void NormalizedLandmark::set_z(float value) {
  _internal_set_z(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:mediapipe.NormalizedLandmark.z)
}
inline float NormalizedLandmark::_internal_z() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.z_;
}
inline void NormalizedLandmark::_internal_set_z(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.z_ = value;
}

// optional float visibility = 4;
inline bool NormalizedLandmark::has_visibility() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void NormalizedLandmark::clear_visibility() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.visibility_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline float NormalizedLandmark::visibility() const {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmark.visibility)
  return _internal_visibility();
}
inline void NormalizedLandmark::set_visibility(float value) {
  _internal_set_visibility(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:mediapipe.NormalizedLandmark.visibility)
}
inline float NormalizedLandmark::_internal_visibility() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.visibility_;
}
inline void NormalizedLandmark::_internal_set_visibility(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.visibility_ = value;
}

// optional float presence = 5;
inline bool NormalizedLandmark::has_presence() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void NormalizedLandmark::clear_presence() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presence_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float NormalizedLandmark::presence() const {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmark.presence)
  return _internal_presence();
}
inline void NormalizedLandmark::set_presence(float value) {
  _internal_set_presence(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:mediapipe.NormalizedLandmark.presence)
}
inline float NormalizedLandmark::_internal_presence() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.presence_;
}
inline void NormalizedLandmark::_internal_set_presence(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.presence_ = value;
}

// -------------------------------------------------------------------

// NormalizedLandmarkList

// repeated .mediapipe.NormalizedLandmark landmark = 1;
inline int NormalizedLandmarkList::_internal_landmark_size() const {
  return _internal_landmark().size();
}
inline int NormalizedLandmarkList::landmark_size() const {
  return _internal_landmark_size();
}
inline void NormalizedLandmarkList::clear_landmark() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.landmark_.Clear();
}
inline ::mediapipe::NormalizedLandmark* NormalizedLandmarkList::mutable_landmark(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.NormalizedLandmarkList.landmark)
  return _internal_mutable_landmark()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>* NormalizedLandmarkList::mutable_landmark()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.NormalizedLandmarkList.landmark)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_landmark();
}
inline const ::mediapipe::NormalizedLandmark& NormalizedLandmarkList::landmark(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmarkList.landmark)
  return _internal_landmark().Get(index);
}
inline ::mediapipe::NormalizedLandmark* NormalizedLandmarkList::add_landmark() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::NormalizedLandmark* _add = _internal_mutable_landmark()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.NormalizedLandmarkList.landmark)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>& NormalizedLandmarkList::landmark() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.NormalizedLandmarkList.landmark)
  return _internal_landmark();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>&
NormalizedLandmarkList::_internal_landmark() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.landmark_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmark>*
NormalizedLandmarkList::_internal_mutable_landmark() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.landmark_;
}

// -------------------------------------------------------------------

// NormalizedLandmarkListCollection

// repeated .mediapipe.NormalizedLandmarkList landmark_list = 1;
inline int NormalizedLandmarkListCollection::_internal_landmark_list_size() const {
  return _internal_landmark_list().size();
}
inline int NormalizedLandmarkListCollection::landmark_list_size() const {
  return _internal_landmark_list_size();
}
inline void NormalizedLandmarkListCollection::clear_landmark_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.landmark_list_.Clear();
}
inline ::mediapipe::NormalizedLandmarkList* NormalizedLandmarkListCollection::mutable_landmark_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:mediapipe.NormalizedLandmarkListCollection.landmark_list)
  return _internal_mutable_landmark_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>* NormalizedLandmarkListCollection::mutable_landmark_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.NormalizedLandmarkListCollection.landmark_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_landmark_list();
}
inline const ::mediapipe::NormalizedLandmarkList& NormalizedLandmarkListCollection::landmark_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:mediapipe.NormalizedLandmarkListCollection.landmark_list)
  return _internal_landmark_list().Get(index);
}
inline ::mediapipe::NormalizedLandmarkList* NormalizedLandmarkListCollection::add_landmark_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::mediapipe::NormalizedLandmarkList* _add = _internal_mutable_landmark_list()->Add();
  // @@protoc_insertion_point(field_add:mediapipe.NormalizedLandmarkListCollection.landmark_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>& NormalizedLandmarkListCollection::landmark_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:mediapipe.NormalizedLandmarkListCollection.landmark_list)
  return _internal_landmark_list();
}
inline const ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>&
NormalizedLandmarkListCollection::_internal_landmark_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.landmark_list_;
}
inline ::google::protobuf::RepeatedPtrField<::mediapipe::NormalizedLandmarkList>*
NormalizedLandmarkListCollection::_internal_mutable_landmark_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.landmark_list_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // mediapipe_2fmediapipe_2fframework_2fformats_2flandmark_2eproto_2epb_2eh
